
{
  "name": "{{package.name}}",
  "version": "{{package.version}}",
{{#if package.isLibrary}}
{{#if package.module.isESM}}
  "exports": {
    ".": {
      "import": {
        "types": "./lib/index.d.mts",
        "default": "./lib/index.mjs"
      },
      "require": {
        "types": "./lib/index.d.cts",
        "default": "./lib/index.cjs"
      }
    }
  },
{{/if}}
  "types": "./lib/index.d.cts",
  "main": "./lib/index.cjs",
  "files": [
    "lib/**/*.cjs",
    "lib/**/*.d.cts",
    "lib/**/*.mjs",
    "lib/**/*.d.mts",
    "lib/**/*.js",
    "lib/**/*.d.ts"
  ],
  "neon": {
    "type": "library",
    "org": "{{package.org}}",
    "platforms": {},
    "load": "./ts/load.cts"
  },
{{#else}}
  "main": "index.node",
{{/if}}
  "scripts": {
    "test": "{{#if package.lang.isTypeScript}}tsc && {{/if}}cargo test",
    "cargo-build": "{{#if package.lang.isTypeScript}}tsc && {{/if}}cargo build --message-format=json > cargo.log",
    "cross-build": "{{#if package.lang.isTypeScript}}tsc && {{/if}}cross build --message-format=json > cross.log",
    "postcargo-build": "neon dist < cargo.log",
    "postcross-build": "neon dist -m /target < cross.log",
    "debug": "npm run cargo-build --",
    "build": "npm run cargo-build -- --release",
    "cross": "npm run cross-build -- --release"{{#if package.isLibrary}},
    "prepack": "neon update-platforms",
    "version": "neon bump --binaries platforms && git add .",
    "remote-publish": "npm version -m 'v%s'",
    "postremote-publish": "git push --follow-tags",
    "dryrun": "gh workflow run publish.yml -f dryrun=true"{{/if}}
  },
  "devDependencies": {
    "@neon-rs/cli": "{{versions.neonCLI}}"{{#if package.lang.isTypeScript}},
    "@tsconfig/node{{versions.tsconfigNode.major}}": "^{{versions.tsconfigNode.semver}}",
    "@types/node": "^{{versions.typesNode}}",
    "typescript": "^{{versions.typescript}}"{{/if}}
  }{{#if package.isLibrary}},
  "dependencies": {
    "@neon-rs/load": "{{versions.neonLoad}}"
  }{{/if}}
}
